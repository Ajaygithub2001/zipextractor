<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ZIP File Upload and Extractor</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.1/jszip.min.js"></script>
    <style>
        body {
            font-family: Arial, sans-serif;
            padding: 20px;
            background-color: #f9f9f9;
            color: #333;
        }
        h1 {
            color: #007bff;
        }
        input, button {
            padding: 10px;
            margin: 10px 0;
            width: calc(100% - 22px);
            border: 1px solid #ccc;
            border-radius: 4px;
        }
        button {
            background-color: #007bff;
            color: white;
            border: none;
            cursor: pointer;
        }
        button:hover {
            background-color: #0056b3;
        }
        #output {
            margin-top: 20px;
            padding: 10px;
            border: 1px solid #ccc;
            background-color: #fff;
            border-radius: 4px;
        }
        ul {
            list-style-type: none;
            padding-left: 20px;
        }
    </style>
</head>
<body>
    <h1>ZIP File Upload and Extractor</h1>
    <p>Upload a ZIP file to extract its contents:</p>
    <input type="file" id="fileInput" accept=".zip">
    <button onclick="extractZip()">Extract ZIP</button>
    
    <div id="output"></div>

    <script>
        async function extractZip() {
            const fileInput = document.getElementById('fileInput');
            const output = document.getElementById('output');
            output.innerHTML = '';  // Clear output

            if (fileInput.files.length === 0) {
                output.innerHTML = 'Please upload a ZIP file.';
                return;
            }

            const file = fileInput.files[0];
            const jszip = new JSZip();

            try {
                const zipContent = await jszip.loadAsync(file);
                output.innerHTML = '<h2>Extracted Files:</h2>';
                
                // Convert files object to an array
                const fileList = Object.values(zipContent.files); 

                // Function to display files and provide download links
                async function displayFiles(files, parent) {
                    const ul = document.createElement('ul');
                    parent.appendChild(ul);
                    
                    for (const zipFile of files) {
                        const li = document.createElement('li');
                        li.textContent = zipFile.name;

                        // Only process files (skip directories)
                        if (!zipFile.dir) {
                            const fileData = await zipFile.async("blob");  // Get file as blob
                            const url = URL.createObjectURL(fileData); // Create a download URL

                            // Create download link
                            const link = document.createElement('a');
                            link.href = url;
                            link.download = zipFile.name;
                            link.textContent = 'Download';

                            li.appendChild(document.createTextNode(' ')); // Add space before the link
                            li.appendChild(link); // Add the link to the list item
                        } else {
                            li.style.fontWeight = 'bold'; // Make directory names bold
                        }

                        ul.appendChild(li);
                    }
                }

                await displayFiles(fileList, output);
            } catch (error) {
                output.innerHTML = `Error extracting ZIP: ${error.message}`;
            }
        }
    </script>
</body>
</html>
